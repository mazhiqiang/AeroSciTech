%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 772 591
%%LanguageLevel: 2
%%Creator: OriginLab Corporation
%%Title: (F:\理论研究\Origin\fractional tss\sine.eps)
%%CreationDate: Sun Jun 12 12:22:48 2016
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshow{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix}wd
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshow ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
/initmtx mtx cmtx def
%%BeginFont: /MC1_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC1_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 40/s40 put
Encoding 41/s41 put
Encoding 43/s43 put
Encoding 45/s45 put
Encoding 48/s48 put
Encoding 49/s49 put
Encoding 50/s50 put
Encoding 61/s61 put
Encoding 97/s97 put
Encoding 99/s99 put
Encoding 101/s101 put
Encoding 104/s104 put
Encoding 105/s105 put
Encoding 110/s110 put
Encoding 114/s114 put
Encoding 115/s115 put
Encoding 120/s120 put
Encoding 121/s121 put
/BoundingBoxes 20 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s40 [0 -434 682 1854] def
/s41 [0 -434 682 1854] def
/s43 [0 -434 1196 1854] def
/s45 [0 -434 682 1854] def
/s48 [0 -434 1139 1854] def
/s49 [0 -434 1139 1854] def
/s50 [0 -434 1139 1854] def
/s61 [0 -434 1196 1854] def
/s97 [0 -434 1139 1854] def
/s99 [0 -434 1024 1854] def
/s101 [0 -434 1139 1854] def
/s104 [0 -434 1139 1854] def
/s105 [0 -434 455 1854] def
/s110 [0 -434 1139 1854] def
/s114 [0 -434 682 1854] def
/s115 [0 -434 1024 1854] def
/s120 [0 -434 1024 1854] def
/s121 [0 -434 1024 1854] def
end
/Metrics 20 dict def
 Metrics begin
/s32 569 def
/s40 682 def
/s41 682 def
/s43 1196 def
/s45 682 def
/s48 1139 def
/s49 1139 def
/s50 1139 def
/s61 1196 def
/s97 1139 def
/s99 1024 def
/s101 1139 def
/s104 1139 def
/s105 455 def
/s110 1139 def
/s114 682 def
/s115 1024 def
/s120 1024 def
/s121 1024 def
end
/CharProcs 20 dict def
CharProcs begin
/.notdef {} def
/s40 {
479 -431 m
379.67 -305.67 295.67 -159 227 9 c
158.33 177 124 351 124 531 c
124 689.67 149.67 841.67 201 987 c
261 1155.67 353.67 1323.67 479 1491 c
608 1491 479 1491 608 1491 c
527.33 1352.33 474 1253.33 448 1194 c
407.33 1102 375.33 1006 352 906 c
323.33 781.33 309 656 309 530 c
309 209.33 408.67 -111 608 -431 c
479 -431 608 -431 479 -431 c
closepath } bind def
/s41 {
253 -431 m
124 -431 253 -431 124 -431 c
323.33 -111 423 209.33 423 530 c
423 655.33 408.67 779.67 380 903 c
357.33 1003 325.67 1099 285 1191 c
259 1251 205.33 1351 124 1491 c
253 1491 124 1491 253 1491 c
378.33 1323.67 471 1155.67 531 987 c
582.33 841.67 608 689.67 608 531 c
608 351 573.5 177 504.5 9 c
435.5 -159 351.67 -305.67 253 -431 c
closepath } bind def
/s43 {
513 237 m
513 639 513 237 513 639 c
114 639 513 639 114 639 c
114 807 114 639 114 807 c
513 807 114 807 513 807 c
513 1206 513 807 513 1206 c
683 1206 513 1206 683 1206 c
683 807 683 1206 683 807 c
1082 807 683 807 1082 807 c
1082 639 1082 807 1082 639 c
683 639 1082 639 683 639 c
683 237 683 639 683 237 c
513 237 683 237 513 237 c
closepath } bind def
/s45 {
65 440 m
65 621 65 440 65 621 c
618 621 65 621 618 621 c
618 440 618 621 618 440 c
65 440 618 440 65 440 c
closepath } bind def
/s48 {
85 723 m
85 896.33 102.83 1035.83 138.5 1141.5 c
174.17 1247.17 227.17 1328.67 297.5 1386 c
367.83 1443.33 456.33 1472 563 1472 c
641.67 1472 710.67 1456.17 770 1424.5 c
829.33 1392.83 878.33 1347.17 917 1287.5 c
955.67 1227.83 986 1155.17 1008 1069.5 c
1030 983.83 1041 868.33 1041 723 c
1041 551 1023.33 412.17 988 306.5 c
952.67 200.83 899.83 119.17 829.5 61.5 c
759.17 3.83 670.33 -25 563 -25 c
421.67 -25 310.67 25.67 230 127 c
133.33 249 85 447.67 85 723 c
closepath 270 723 m
270 482.33 298.17 322.17 354.5 242.5 c
410.83 162.83 480.33 123 563 123 c
645.67 123 715.17 163 771.5 243 c
827.83 323 856 483 856 723 c
856 964.33 827.83 1124.67 771.5 1204 c
715.17 1283.33 645 1323 561 1323 c
478.33 1323 412.33 1288 363 1218 c
301 1128.67 270 963.67 270 723 c
closepath } bind def
/s49 {
763 0 m
583 0 763 0 583 0 c
583 1147 583 0 583 1147 c
539.67 1105.67 482.83 1064.33 412.5 1023 c
342.17 981.67 279 950.67 223 930 c
223 1104 223 930 223 1104 c
323.67 1151.33 411.67 1208.67 487 1276 c
562.33 1343.33 615.67 1408.67 647 1472 c
763 1472 647 1472 763 1472 c
763 0 763 1472 763 0 c
closepath } bind def
/s50 {
1031 173 m
1031 0 1031 173 1031 0 c
62 0 1031 0 62 0 c
60.67 43.33 67.67 85 83 125 c
107.67 191 147.17 256 201.5 320 c
255.83 384 334.33 458 437 542 c
596.33 672.67 704 776.17 760 852.5 c
816 928.83 844 1001 844 1069 c
844 1140.33 818.5 1200.5 767.5 1249.5 c
716.5 1298.5 650 1323 568 1323 c
481.33 1323 412 1297 360 1245 c
308 1193 281.67 1121 281 1029 c
96 1048 281 1029 96 1048 c
108.67 1186 156.33 1291.17 239 1363.5 c
321.67 1435.83 432.67 1472 572 1472 c
712.67 1472 824 1433 906 1355 c
988 1277 1029 1180.33 1029 1065 c
1029 1006.33 1017 948.67 993 892 c
969 835.33 929.17 775.67 873.5 713 c
817.83 650.33 725.33 564.33 596 455 c
488 364.33 418.67 302.83 388 270.5 c
357.33 238.17 332 205.67 312 173 c
1031 173 312 173 1031 173 c
closepath } bind def
/s61 {
1082 862 m
114 862 1082 862 114 862 c
114 1030 114 862 114 1030 c
1082 1030 114 1030 1082 1030 c
1082 862 1082 1030 1082 862 c
closepath 1082 417 m
114 417 1082 417 114 417 c
114 585 114 417 114 585 c
1082 585 114 585 1082 585 c
1082 417 1082 585 1082 417 c
closepath } bind def
/s97 {
828 131 m
761.33 74.33 697.17 34.33 635.5 11 c
573.83 -12.33 507.67 -24 437 -24 c
320.33 -24 230.67 4.5 168 61.5 c
105.33 118.5 74 191.33 74 280 c
74 332 85.83 379.5 109.5 422.5 c
133.17 465.5 164.17 500 202.5 526 c
240.83 552 284 571.67 332 585 c
367.33 594.33 420.67 603.33 492 612 c
637.33 629.33 744.33 650 813 674 c
813.67 698.67 814 714.33 814 721 c
814 794.33 797 846 763 876 c
717 916.67 648.67 937 558 937 c
473.33 937 410.83 922.17 370.5 892.5 c
330.17 862.83 300.33 810.33 281 735 c
105 759 281 735 105 759 c
121 834.33 147.33 895.17 184 941.5 c
220.67 987.83 273.67 1023.5 343 1048.5 c
412.33 1073.5 492.67 1086 584 1086 c
674.67 1086 748.33 1075.33 805 1054 c
861.67 1032.67 903.33 1005.83 930 973.5 c
956.67 941.17 975.33 900.33 986 851 c
992 820.33 995 765 995 685 c
995 445 995 685 995 445 c
995 277.67 998.83 171.83 1006.5 127.5 c
1014.17 83.17 1029.33 40.67 1052 0 c
864 0 1052 0 864 0 c
845.33 37.33 833.33 81 828 131 c
closepath 813 533 m
747.67 506.33 649.67 483.67 519 465 c
445 454.33 392.67 442.33 362 429 c
331.33 415.67 307.67 396.17 291 370.5 c
274.33 344.83 266 316.33 266 285 c
266 237 284.17 197 320.5 165 c
356.83 133 410 117 480 117 c
549.33 117 611 132.17 665 162.5 c
719 192.83 758.67 234.33 784 287 c
803.33 327.67 813 387.67 813 467 c
813 533 813 467 813 533 c
closepath } bind def
/s99 {
828 389 m
1005 366 828 389 1005 366 c
985.67 244 936.17 148.5 856.5 79.5 c
776.83 10.5 679 -24 563 -24 c
417.67 -24 300.83 23.5 212.5 118.5 c
124.17 213.5 80 349.67 80 527 c
80 641.67 99 742 137 828 c
175 914 232.83 978.5 310.5 1021.5 c
388.17 1064.5 472.67 1086 564 1086 c
679.33 1086 773.67 1056.83 847 998.5 c
920.33 940.17 967.33 857.33 988 750 c
813 723 988 750 813 723 c
796.33 794.33 766.83 848 724.5 884 c
682.17 920 631 938 571 938 c
480.33 938 406.67 905.5 350 840.5 c
293.33 775.5 265 672.67 265 532 c
265 389.33 292.33 285.67 347 221 c
401.67 156.33 473 124 561 124 c
631.67 124 690.67 145.67 738 189 c
785.33 232.33 815.33 299 828 389 c
closepath } bind def
/s101 {
862 342 m
1048 319 862 342 1048 319 c
1018.67 210.33 964.33 126 885 66 c
805.67 6 704.33 -24 581 -24 c
425.67 -24 302.5 23.83 211.5 119.5 c
120.5 215.17 75 349.33 75 522 c
75 700.67 121 839.33 213 938 c
305 1036.67 424.33 1086 571 1086 c
713 1086 829 1037.67 919 941 c
1009 844.33 1054 708.33 1054 533 c
1054 522.33 1053.67 506.33 1053 485 c
261 485 1053 485 261 485 c
267.67 368.33 300.67 279 360 217 c
419.33 155 493.33 124 582 124 c
648 124 704.33 141.33 751 176 c
797.67 210.67 834.67 266 862 342 c
closepath 271 633 m
864 633 271 633 864 633 c
856 722.33 833.33 789.33 796 834 c
738.67 903.33 664.33 938 573 938 c
490.33 938 420.83 910.33 364.5 855 c
308.17 799.67 277 725.67 271 633 c
closepath } bind def
/s104 {
135 0 m
135 1466 135 0 135 1466 c
315 1466 135 1466 315 1466 c
315 940 315 1466 315 940 c
399 1037.33 505 1086 633 1086 c
711.67 1086 780 1070.5 838 1039.5 c
896 1008.5 937.5 965.67 962.5 911 c
987.5 856.33 1000 777 1000 673 c
1000 0 1000 673 1000 0 c
820 0 1000 0 820 0 c
820 673 820 0 820 673 c
820 763 800.5 828.5 761.5 869.5 c
722.5 910.5 667.33 931 596 931 c
542.67 931 492.5 917.17 445.5 889.5 c
398.5 861.83 365 824.33 345 777 c
325 729.67 315 664.33 315 581 c
315 0 315 581 315 0 c
135 0 315 0 135 0 c
closepath } bind def
/s105 {
136 1259 m
136 1466 136 1259 136 1466 c
316 1466 136 1466 316 1466 c
316 1259 316 1466 316 1259 c
136 1259 316 1259 136 1259 c
closepath 136 0 m
136 1062 136 0 136 1062 c
316 1062 136 1062 316 1062 c
316 0 316 1062 316 0 c
136 0 316 0 136 0 c
closepath } bind def
/s110 {
135 0 m
135 1062 135 0 135 1062 c
297 1062 135 1062 297 1062 c
297 911 297 1062 297 911 c
375 1027.67 487.67 1086 635 1086 c
699 1086 757.83 1074.5 811.5 1051.5 c
865.17 1028.5 905.33 998.33 932 961 c
958.67 923.67 977.33 879.33 988 828 c
994.67 794.67 998 736.33 998 653 c
998 0 998 653 998 0 c
818 0 998 0 818 0 c
818 646 818 0 818 646 c
818 719.33 811 774.17 797 810.5 c
783 846.83 758.17 875.83 722.5 897.5 c
686.83 919.17 645 930 597 930 c
520.33 930 454.17 905.67 398.5 857 c
342.83 808.33 315 716 315 580 c
315 0 315 580 315 0 c
135 0 315 0 135 0 c
closepath } bind def
/s114 {
133 0 m
133 1062 133 0 133 1062 c
295 1062 133 1062 295 1062 c
295 901 295 1062 295 901 c
336.33 976.33 374.5 1026 409.5 1050 c
444.5 1074 483 1086 525 1086 c
585.67 1086 647.33 1066.67 710 1028 c
648 861 710 1028 648 861 c
604 887 560 900 516 900 c
476.67 900 441.33 888.17 410 864.5 c
378.67 840.83 356.33 808 343 766 c
323 702 313 632 313 556 c
313 0 313 556 313 0 c
133 0 313 0 133 0 c
closepath } bind def
/s115 {
63 317 m
241 345 63 317 241 345 c
251 273.67 278.83 219 324.5 181 c
370.17 143 434 124 516 124 c
598.67 124 660 140.83 700 174.5 c
740 208.17 760 247.67 760 293 c
760 333.67 742.33 365.67 707 389 c
682.33 405 621 425.33 523 450 c
391 483.33 299.5 512.17 248.5 536.5 c
197.5 560.83 158.83 594.5 132.5 637.5 c
106.17 680.5 93 728 93 780 c
93 827.33 103.83 871.17 125.5 911.5 c
147.17 951.83 176.67 985.33 214 1012 c
242 1032.67 280.17 1050.17 328.5 1064.5 c
376.83 1078.83 428.67 1086 484 1086 c
567.33 1086 640.5 1074 703.5 1050 c
766.5 1026 813 993.5 843 952.5 c
873 911.5 893.67 856.67 905 788 c
729 764 905 788 729 764 c
721 818.67 697.83 861.33 659.5 892 c
621.17 922.67 567 938 497 938 c
414.33 938 355.33 924.33 320 897 c
284.67 869.67 267 837.67 267 801 c
267 777.67 274.33 756.67 289 738 c
303.67 718.67 326.67 702.67 358 690 c
376 683.33 429 668 517 644 c
644.33 610 733.17 582.17 783.5 560.5 c
833.83 538.83 873.33 507.33 902 466 c
930.67 424.67 945 373.33 945 312 c
945 252 927.5 195.5 892.5 142.5 c
857.5 89.5 807 48.5 741 19.5 c
675 -9.5 600.33 -24 517 -24 c
379 -24 273.83 4.67 201.5 62 c
129.17 119.33 83 204.33 63 317 c
closepath } bind def
/s120 {
15 0 m
403 552 15 0 403 552 c
44 1062 403 552 44 1062 c
269 1062 44 1062 269 1062 c
432 813 269 1062 432 813 c
462.67 765.67 487.33 726 506 694 c
535.33 738 562.33 777 587 811 c
766 1062 587 811 766 1062 c
981 1062 766 1062 981 1062 c
614 562 981 1062 614 562 c
1009 0 614 562 1009 0 c
788 0 1009 0 788 0 c
570 330 788 0 570 330 c
512 419 570 330 512 419 c
233 0 512 419 233 0 c
15 0 233 0 15 0 c
closepath } bind def
/s121 {
127 -409 m
107 -240 127 -409 107 -240 c
146.33 -250.67 180.67 -256 210 -256 c
250 -256 282 -249.33 306 -236 c
330 -222.67 349.67 -204 365 -180 c
376.33 -162 394.67 -117.33 420 -46 c
423.33 -36 428.67 -21.33 436 -2 c
33 1062 436 -2 33 1062 c
227 1062 33 1062 227 1062 c
448 447 227 1062 448 447 c
476.67 369 502.33 287 525 201 c
545.67 283.67 570.33 364.33 599 443 c
826 1062 599 443 826 1062 c
1006 1062 826 1062 1006 1062 c
602 -18 1006 1062 602 -18 c
558.67 -134.67 525 -215 501 -259 c
469 -318.33 432.33 -361.83 391 -389.5 c
349.67 -417.17 300.33 -431 243 -431 c
208.33 -431 169.67 -423.67 127 -409 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC1_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC2_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC2_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 121/s121 put
/BoundingBoxes 3 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s121 [0 -434 1024 1854] def
end
/Metrics 3 dict def
 Metrics begin
/s32 569 def
/s121 1024 def
end
/CharProcs 3 dict def
CharProcs begin
/.notdef {} def
/s121 {
127 -409 m
107 -240 127 -409 107 -240 c
146.33 -250.67 180.67 -256 210 -256 c
250 -256 282 -249.33 306 -236 c
330 -222.67 349.67 -204 365 -180 c
376.33 -162 394.67 -117.33 420 -46 c
423.33 -36 428.67 -21.33 436 -2 c
33 1062 436 -2 33 1062 c
227 1062 33 1062 227 1062 c
448 447 227 1062 448 447 c
476.67 369 502.33 287 525 201 c
545.67 283.67 570.33 364.33 599 443 c
826 1062 599 443 826 1062 c
1006 1062 826 1062 1006 1062 c
602 -18 1006 1062 602 -18 c
558.67 -134.67 525 -215 501 -259 c
469 -318.33 432.33 -361.83 391 -389.5 c
349.67 -417.17 300.33 -431 243 -431 c
208.33 -431 169.67 -423.67 127 -409 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC2_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC3_Symbol
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -223.00 def
/UnderlineThickness 100.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC3_Symbol def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1 -450 2279 2059] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
/BoundingBoxes 3 dict def
BoundingBoxes begin
/s32 [0 -450 512 2059] def
/s61508 [0 -450 0 2059] def
end
/Metrics 3 dict def
 Metrics begin
/s32 512 def
/s61508 0 def
end
/CharProcs 3 dict def
CharProcs begin
/.notdef {} def
/s61508 {
1226 0 m
26 0 1226 0 26 0 c
654 1387 26 0 654 1387 c
1226 0 654 1387 1226 0 c
closepath 990 82 m
591 1049 990 82 591 1049 c
151 82 591 1049 151 82 c
990 82 151 82 990 82 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC3_Symbol exch definefont pop
%%EndFont
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 771.85 590.88 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.318747 0.321107 sc

/initmtx mtx cmtx def
initmtx smtx
[1.0000 0.0000 0.0000 1.0000 0.0000 0.0000 ] concat
 [0.752953 -0 0 -0.747416 0 1840.14] concat
gs
1124 2053 m
1124 286 l
3 sw
0.502 0.502 0.502 rgb
1 sj
1 scap
st
1673 2053 m
1673 286 l
st
2221 2053 m
2221 286 l
st
576 1611 m
2769 1611 l
st
576 1170 m
2769 1170 l
st
576 728 m
2769 728 l
st
576 2053 m
2769 2053 l
7 sw
0 0 0 rgb
st
850 2053 m
850 2070 l
st
1398 2053 m
1398 2070 l
st
1947 2053 m
1947 2070 l
st
2495 2053 m
2495 2070 l
st
576 2053 m
576 2087 l
st
1124 2053 m
1124 2087 l
st
1673 2053 m
1673 2087 l
st
2221 2053 m
2221 2087 l
st
2769 2053 m
2769 2087 l
st
576 286 m
2769 286 l
st
850 286 m
850 303 l
st
1398 286 m
1398 303 l
st
1947 286 m
1947 303 l
st
2495 286 m
2495 303 l
st
576 286 m
576 320 l
st
1124 286 m
1124 320 l
st
1673 286 m
1673 320 l
st
2221 286 m
2221 320 l
st
2769 286 m
2769 320 l
st
576 2053 m
576 286 l
st
576 1832 m
559 1832 l
st
576 1390 m
559 1390 l
st
576 949 m
559 949 l
st
576 507 m
559 507 l
st
576 2053 m
542 2053 l
st
576 1611 m
542 1611 l
st
576 1170 m
542 1170 l
st
576 728 m
542 728 l
st
576 286 m
542 286 l
st
2769 2053 m
2769 286 l
st
2769 1832 m
2752 1832 l
st
2769 1390 m
2752 1390 l
st
2769 949 m
2752 949 l
st
2769 507 m
2752 507 l
st
2769 2053 m
2735 2053 l
st
2769 1611 m
2735 1611 l
st
2769 1170 m
2735 1170 l
st
2769 728 m
2735 728 l
st
2769 286 m
2735 286 l
st
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 543 -2170 m
(-2)[25 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1091 -2170 m
(-1)[25 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1652 -2170 m
(0)[42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2200 -2170 m
(1)[42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2748 -2170 m
(2)[42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 451 -2076 m
(-2)[25 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 451 -1634 m
(-1)[25 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 476 -1193 m
(0)[42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 476 -751 m
(1)[42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 476 -309 m
(2)[42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
pathproc 576 286 2194 1768 np rectpath
/eocl cland
np exec
576 1769 m
591 1756 l
5 sw
0 1 0 rgb
st
609 1742 m
624 1730 l
st
643 1715 m
657 1703 l
st
675 1689 m
692 1675 l
st
709 1662 m
726 1648 l
st
745 1633 m
761 1620 l
st
779 1605 m
796 1591 l
st
813 1578 m
829 1565 l
st
847 1550 m
864 1537 l
st
881 1523 m
895 1512 l
st
914 1496 m
930 1484 l
st
948 1469 m
962 1458 l
st
981 1443 m
997 1430 l
st
1015 1415 m
1032 1401 l
st
1050 1387 m
1064 1376 l
st
1080 1362 m
1097 1349 l
st
1115 1334 m
1130 1323 l
st
1150 1306 m
1165 1294 l
st
1183 1280 m
1198 1268 l
st
1216 1253 m
1233 1240 l
st
1249 1226 m
1265 1214 l
st
1283 1199 m
1300 1186 l
st
1319 1170 m
1335 1157 l
st
1353 1143 m
1369 1130 l
st
1387 1115 m
1404 1102 l
st
1423 1086 m
1439 1073 l
st
1458 1059 m
1473 1046 l
st
1492 1031 m
1508 1018 l
st
1526 1003 m
1542 990 l
st
1562 975 m
1576 963 l
st
1595 948 m
1611 935 l
st
1630 920 m
1644 908 l
st
1663 893 m
1678 881 l
st
1696 866 m
1712 853 l
st
1731 838 m
1745 827 l
st
1763 813 m
1779 799 l
st
1798 785 m
1812 773 l
st
1829 759 m
1846 745 l
st
1864 731 m
1879 719 l
st
1896 705 m
1913 692 l
st
1931 677 m
1946 665 l
st
1963 651 m
1979 639 l
st
1997 624 m
2011 612 l
st
2029 598 m
2045 585 l
st
2063 571 m
2077 559 l
st
2096 544 m
2111 532 l
st
2129 518 m
2143 506 l
st
2162 491 m
2177 479 l
st
2196 464 m
2211 451 l
st
2231 436 m
2245 424 l
st
2263 410 m
2278 397 l
st
2298 382 m
2313 369 l
st
2330 355 m
2347 342 l
st
2365 327 m
2381 314 l
st
2400 299 m
2414 288 l
st
2432 274 m
2448 260 l
st
2466 246 m
2482 233 l
st
2498 220 m
2515 206 l
st
2533 192 m
2549 179 l
st
2565 166 m
2582 153 l
st
2600 138 m
2614 126 l
st
2632 112 m
2649 98 l
st
2666 85 m
2680 73 l
st
2698 59 m
2713 47 l
st
2732 32 m
2746 20 l
st
2764 6 m
2768 3 l
st
gr
gs
pathproc 576 286 2194 1768 np rectpath
/eocl cland
np exec
576 2053 m
576 2053 m
581 2049 l
587 2044 l
592 2040 l
598 2035 l
603 2031 l
609 2026 l
614 2022 l
620 2018 l
625 2013 l
631 2009 l
636 2004 l
642 2000 l
647 1996 l
653 1991 l
658 1987 l
664 1982 l
669 1978 l
675 1973 l
680 1969 l
686 1965 l
691 1960 l
697 1956 l
702 1951 l
708 1947 l
713 1943 l
719 1938 l
724 1934 l
730 1929 l
735 1925 l
740 1920 l
746 1916 l
751 1912 l
757 1907 l
762 1903 l
768 1898 l
773 1894 l
779 1890 l
784 1885 l
790 1881 l
795 1876 l
801 1872 l
806 1867 l
812 1863 l
817 1859 l
823 1854 l
828 1850 l
834 1845 l
839 1841 l
845 1837 l
850 1832 l
856 1828 l
861 1823 l
867 1819 l
872 1814 l
878 1810 l
883 1806 l
889 1801 l
894 1797 l
899 1792 l
905 1788 l
910 1784 l
916 1779 l
921 1775 l
927 1770 l
932 1766 l
938 1761 l
943 1757 l
949 1753 l
954 1748 l
960 1744 l
965 1739 l
971 1735 l
976 1731 l
982 1726 l
987 1722 l
993 1717 l
998 1713 l
1004 1708 l
1009 1704 l
1015 1700 l
1020 1695 l
1026 1691 l
1031 1686 l
1037 1682 l
1042 1678 l
1047 1673 l
1053 1669 l
1058 1664 l
1064 1660 l
1069 1655 l
1075 1651 l
1080 1647 l
1086 1642 l
1091 1638 l
1097 1633 l
1102 1629 l
1108 1625 l
1113 1620 l
1119 1616 l
1124 1611 l
1130 1607 l
1135 1602 l
1141 1598 l
1146 1594 l
1152 1589 l
1157 1585 l
1163 1580 l
1168 1576 l
1174 1571 l
1179 1567 l
1185 1563 l
1190 1558 l
1196 1554 l
1201 1549 l
1206 1545 l
1212 1541 l
1217 1536 l
1223 1532 l
1228 1527 l
1234 1523 l
1239 1518 l
1245 1514 l
1250 1510 l
1256 1505 l
1261 1501 l
1267 1496 l
1272 1492 l
1278 1488 l
1283 1483 l
1289 1479 l
1294 1474 l
1300 1470 l
1305 1465 l
1311 1461 l
1316 1457 l
1322 1452 l
1327 1448 l
1333 1443 l
1338 1439 l
1344 1435 l
1349 1430 l
1355 1426 l
1360 1421 l
1365 1417 l
1371 1412 l
1376 1408 l
1382 1404 l
1387 1399 l
1393 1395 l
1398 1390 l
1404 1386 l
1409 1382 l
1415 1377 l
1420 1373 l
1426 1368 l
1431 1364 l
1437 1359 l
1442 1355 l
1448 1351 l
1453 1346 l
1459 1342 l
1464 1337 l
1470 1333 l
1475 1329 l
1481 1324 l
1486 1320 l
1492 1315 l
1497 1311 l
1503 1306 l
1508 1302 l
1514 1298 l
1519 1293 l
1524 1289 l
1530 1284 l
1535 1280 l
1541 1276 l
1546 1271 l
1552 1267 l
1557 1262 l
1563 1258 l
1568 1253 l
1574 1249 l
1579 1245 l
1585 1240 l
1590 1236 l
1596 1231 l
1601 1227 l
1607 1223 l
1612 1218 l
1618 1214 l
1623 1209 l
1629 1205 l
1634 1200 l
1640 1196 l
1645 1192 l
1651 1187 l
1656 1183 l
1662 1178 l
1667 1174 l
1673 1169 l
1678 1165 l
1683 1161 l
1689 1156 l
1694 1152 l
1700 1147 l
1705 1143 l
1711 1139 l
1716 1134 l
1722 1130 l
1727 1125 l
1733 1121 l
1738 1116 l
1744 1112 l
1749 1108 l
1755 1103 l
1760 1099 l
1766 1094 l
1771 1090 l
1777 1086 l
1782 1081 l
1788 1077 l
1793 1072 l
1799 1068 l
1804 1063 l
1810 1059 l
1815 1055 l
1821 1050 l
1826 1046 l
1831 1041 l
1837 1037 l
1842 1033 l
1848 1028 l
1853 1024 l
1859 1019 l
1864 1015 l
1870 1010 l
1875 1006 l
1881 1002 l
1886 997 l
1892 993 l
1897 988 l
1903 984 l
1908 980 l
1914 975 l
1919 971 l
1925 966 l
1930 962 l
1936 957 l
1941 953 l
1947 949 l
1952 944 l
1958 940 l
1963 935 l
1969 931 l
1974 927 l
1980 922 l
1985 918 l
1990 913 l
1996 909 l
2001 904 l
2007 900 l
2012 896 l
2018 891 l
2023 887 l
2029 882 l
2034 878 l
2040 874 l
2045 869 l
2051 865 l
2056 860 l
2062 856 l
2067 851 l
2073 847 l
2078 843 l
2084 838 l
2089 834 l
2095 829 l
2100 825 l
2106 821 l
2111 816 l
2117 812 l
2122 807 l
2128 803 l
2133 798 l
2139 794 l
2144 790 l
2149 785 l
2155 781 l
2160 776 l
2166 772 l
2171 768 l
2177 763 l
2182 759 l
2188 754 l
2193 750 l
2199 745 l
2204 741 l
2210 737 l
2215 732 l
2221 728 l
2226 723 l
2232 719 l
2237 714 l
2243 710 l
2248 706 l
2254 701 l
2259 697 l
2265 692 l
2270 688 l
2276 684 l
2281 679 l
2287 675 l
2292 670 l
2298 666 l
2303 661 l
2308 657 l
2314 653 l
2319 648 l
2325 644 l
2330 639 l
2336 635 l
2341 631 l
2347 626 l
2352 622 l
2358 617 l
2363 613 l
2369 608 l
2374 604 l
2380 600 l
2385 595 l
2391 591 l
2396 586 l
2402 582 l
2407 578 l
2413 573 l
2418 569 l
2424 564 l
2429 560 l
2435 555 l
2440 551 l
2446 547 l
2451 542 l
2456 538 l
2462 533 l
2467 529 l
2473 525 l
2478 520 l
2484 516 l
2489 511 l
2495 507 l
2500 502 l
2506 498 l
2511 494 l
2517 489 l
2522 485 l
2528 480 l
2533 476 l
2539 472 l
2544 467 l
2550 463 l
2555 458 l
2561 454 l
2566 449 l
2572 445 l
2577 441 l
2583 436 l
2588 432 l
2594 427 l
2599 423 l
2605 419 l
2610 414 l
2615 410 l
2621 405 l
2626 401 l
2632 396 l
2637 392 l
2643 388 l
2648 383 l
2654 379 l
2659 374 l
2665 370 l
2670 366 l
2676 361 l
2681 357 l
2687 352 l
2692 348 l
2698 343 l
2703 339 l
2709 335 l
2714 330 l
2720 326 l
2725 321 l
2731 317 l
2736 313 l
2742 308 l
2747 304 l
2753 299 l
2758 295 l
2764 290 l
2769 286 l
5 sw
0 1 0 rgb
st
gr
gs
pathproc 576 286 2194 1768 np rectpath
/eocl cland
np exec
576 1346 m
596 1346 l
5 sw
1 0 0 rgb
st
619 1346 m
639 1346 l
st
662 1346 m
682 1346 l
st
705 1346 m
725 1346 l
st
748 1346 m
768 1346 l
st
791 1346 m
811 1346 l
st
834 1346 m
854 1345 l
st
877 1343 m
897 1341 l
st
920 1337 m
940 1334 l
st
963 1329 m
982 1325 l
st
1004 1319 m
1023 1314 l
st
1045 1307 m
1064 1300 l
st
1086 1292 m
1105 1284 l
st
1127 1275 m
1144 1267 l
st
1164 1258 m
1183 1249 l
st
1203 1238 m
1221 1228 l
st
1242 1217 m
1259 1207 l
st
1279 1195 m
1296 1185 l
st
1316 1172 m
1333 1161 l
st
1354 1148 m
1371 1135 l
st
1391 1121 m
1406 1110 l
st
1426 1097 m
1441 1086 l
st
1460 1071 m
1476 1059 l
st
1493 1047 m
1510 1034 l
st
1529 1019 m
1545 1006 l
st
1563 992 m
1577 981 l
st
1596 966 m
1613 952 l
st
1630 939 m
1646 926 l
st
1664 911 m
1680 898 l
st
1698 884 m
1712 873 l
st
1731 857 m
1747 845 l
st
1767 829 m
1782 817 l
st
1800 803 m
1816 790 l
st
1836 775 m
1852 762 l
st
1871 748 m
1886 737 l
st
1905 722 m
1921 711 l
st
1941 697 m
1958 685 l
st
1977 672 m
1995 660 l
st
2015 646 m
2032 635 l
st
2051 623 m
2069 612 l
st
2089 600 m
2106 591 l
st
2127 579 m
2144 570 l
st
2165 559 m
2184 549 l
st
2204 540 m
2221 533 l
st
2242 524 m
2261 516 l
st
2283 508 m
2301 502 l
st
2323 495 m
2342 490 l
st
2365 484 m
2385 479 l
st
2407 474 m
2427 471 l
st
2450 468 m
2470 466 l
st
2493 464 m
2513 463 l
st
2536 463 m
2556 463 l
st
2579 463 m
2599 463 l
st
2622 463 m
2642 463 l
st
2665 463 m
2685 463 l
st
2708 463 m
2728 463 l
st
2751 463 m
2768 463 l
st
gr
gs
pathproc 576 286 2194 1768 np rectpath
/eocl cland
np exec
576 1611 m
576 1611 m
581 1611 l
587 1611 l
592 1611 l
598 1611 l
603 1611 l
609 1611 l
614 1611 l
620 1611 l
625 1611 l
631 1611 l
636 1611 l
642 1611 l
647 1611 l
653 1611 l
658 1611 l
664 1611 l
669 1611 l
675 1611 l
680 1611 l
686 1611 l
691 1611 l
697 1611 l
702 1611 l
708 1611 l
713 1611 l
719 1611 l
724 1611 l
730 1611 l
735 1611 l
740 1611 l
746 1611 l
751 1611 l
757 1611 l
762 1611 l
768 1611 l
773 1611 l
779 1611 l
784 1611 l
790 1611 l
795 1611 l
801 1611 l
806 1611 l
812 1611 l
817 1611 l
823 1611 l
828 1611 l
834 1611 l
839 1611 l
845 1610 l
850 1610 l
856 1610 l
861 1609 l
867 1609 l
872 1609 l
878 1608 l
883 1607 l
889 1607 l
894 1606 l
899 1606 l
905 1605 l
910 1604 l
916 1603 l
921 1602 l
927 1601 l
932 1601 l
938 1600 l
943 1599 l
949 1597 l
954 1596 l
960 1595 l
965 1594 l
971 1593 l
976 1591 l
982 1590 l
987 1589 l
993 1587 l
998 1586 l
1004 1584 l
1009 1583 l
1015 1581 l
1020 1580 l
1026 1578 l
1031 1576 l
1037 1574 l
1042 1573 l
1047 1571 l
1053 1569 l
1058 1567 l
1064 1565 l
1069 1563 l
1075 1561 l
1080 1559 l
1086 1557 l
1091 1555 l
1097 1553 l
1102 1550 l
1108 1548 l
1113 1546 l
1119 1544 l
1124 1541 l
1130 1539 l
1135 1536 l
1141 1534 l
1146 1531 l
1152 1529 l
1157 1526 l
1163 1524 l
1168 1521 l
1174 1518 l
1179 1516 l
1185 1513 l
1190 1510 l
1196 1507 l
1201 1504 l
1206 1501 l
1212 1498 l
1217 1495 l
1223 1492 l
1228 1489 l
1234 1486 l
1239 1483 l
1245 1480 l
1250 1477 l
1256 1474 l
1261 1471 l
1267 1467 l
1272 1464 l
1278 1461 l
1283 1457 l
1289 1454 l
1294 1451 l
1300 1447 l
1305 1444 l
1311 1440 l
1316 1437 l
1322 1433 l
1327 1430 l
1333 1426 l
1338 1423 l
1344 1419 l
1349 1415 l
1355 1412 l
1360 1408 l
1365 1404 l
1371 1400 l
1376 1397 l
1382 1393 l
1387 1389 l
1393 1385 l
1398 1381 l
1404 1377 l
1409 1373 l
1415 1370 l
1420 1366 l
1426 1362 l
1431 1358 l
1437 1354 l
1442 1350 l
1448 1346 l
1453 1342 l
1459 1337 l
1464 1333 l
1470 1329 l
1475 1325 l
1481 1321 l
1486 1317 l
1492 1313 l
1497 1308 l
1503 1304 l
1508 1300 l
1514 1296 l
1519 1292 l
1524 1287 l
1530 1283 l
1535 1279 l
1541 1275 l
1546 1270 l
1552 1266 l
1557 1262 l
1563 1257 l
1568 1253 l
1574 1249 l
1579 1244 l
1585 1240 l
1590 1236 l
1596 1231 l
1601 1227 l
1607 1222 l
1612 1218 l
1618 1214 l
1623 1209 l
1629 1205 l
1634 1200 l
1640 1196 l
1645 1192 l
1651 1187 l
1656 1183 l
1662 1178 l
1667 1174 l
1673 1170 l
1678 1165 l
1683 1161 l
1689 1156 l
1694 1152 l
1700 1147 l
1705 1143 l
1711 1139 l
1716 1134 l
1722 1130 l
1727 1125 l
1733 1121 l
1738 1117 l
1744 1112 l
1749 1108 l
1755 1103 l
1760 1099 l
1766 1095 l
1771 1090 l
1777 1086 l
1782 1082 l
1788 1077 l
1793 1073 l
1799 1069 l
1804 1064 l
1810 1060 l
1815 1056 l
1821 1052 l
1826 1047 l
1831 1043 l
1837 1039 l
1842 1035 l
1848 1031 l
1853 1026 l
1859 1022 l
1864 1018 l
1870 1014 l
1875 1010 l
1881 1006 l
1886 1002 l
1892 997 l
1897 993 l
1903 989 l
1908 985 l
1914 981 l
1919 977 l
1925 973 l
1930 969 l
1936 966 l
1941 962 l
1947 958 l
1952 954 l
1958 950 l
1963 946 l
1969 942 l
1974 939 l
1980 935 l
1985 931 l
1990 927 l
1996 924 l
2001 920 l
2007 916 l
2012 913 l
2018 909 l
2023 906 l
2029 902 l
2034 899 l
2040 895 l
2045 892 l
2051 888 l
2056 885 l
2062 882 l
2067 878 l
2073 875 l
2078 872 l
2084 868 l
2089 865 l
2095 862 l
2100 859 l
2106 856 l
2111 853 l
2117 850 l
2122 847 l
2128 844 l
2133 841 l
2139 838 l
2144 835 l
2149 832 l
2155 829 l
2160 826 l
2166 823 l
2171 821 l
2177 818 l
2182 815 l
2188 813 l
2193 810 l
2199 808 l
2204 805 l
2210 803 l
2215 800 l
2221 798 l
2226 795 l
2232 793 l
2237 791 l
2243 789 l
2248 786 l
2254 784 l
2259 782 l
2265 780 l
2270 778 l
2276 776 l
2281 774 l
2287 772 l
2292 770 l
2298 768 l
2303 766 l
2308 765 l
2314 763 l
2319 761 l
2325 759 l
2330 758 l
2336 756 l
2341 755 l
2347 753 l
2352 752 l
2358 750 l
2363 749 l
2369 748 l
2374 746 l
2380 745 l
2385 744 l
2391 743 l
2396 742 l
2402 740 l
2407 739 l
2413 738 l
2418 738 l
2424 737 l
2429 736 l
2435 735 l
2440 734 l
2446 733 l
2451 733 l
2456 732 l
2462 732 l
2467 731 l
2473 730 l
2478 730 l
2484 730 l
2489 729 l
2495 729 l
2500 729 l
2506 728 l
2511 728 l
2517 728 l
2522 728 l
2528 728 l
2533 728 l
2539 728 l
2544 728 l
2550 728 l
2555 728 l
2561 728 l
2566 728 l
2572 728 l
2577 728 l
2583 728 l
2588 728 l
2594 728 l
2599 728 l
2605 728 l
2610 728 l
2615 728 l
2621 728 l
2626 728 l
2632 728 l
2637 728 l
2643 728 l
2648 728 l
2654 728 l
2659 728 l
2665 728 l
2670 728 l
2676 728 l
2681 728 l
2687 728 l
2692 728 l
2698 728 l
2703 728 l
2709 728 l
2714 728 l
2720 728 l
2725 728 l
2731 728 l
2736 728 l
2742 728 l
2747 728 l
2753 728 l
2758 728 l
2764 728 l
2769 728 l
5 sw
1 0 0 rgb
st
gr
gs
gs
1 -1 sc
349 -1146 tr
90 ro
/MC2_Arial 91 self 0 0 m
(y)[46 ] xs
1 -1 sc
gr
gr
gs
1 -1 sc
/MC1_Arial 91 self 1650 -2308 m
(x)[45 ] xs
1 -1 sc
gr
1836 1460 m
2693 1460 l
2693 1938 l
1836 1938 l
cp
gs
1 1 1 rgb
eofi
gr
3 sw
st
gs
gs
gr
gs
gs
1849 1532 m
1869 1532 l
5 sw
0 1 0 rgb
st
1892 1532 m
1912 1532 l
st
1935 1532 m
1955 1532 l
st
1978 1532 m
1998 1532 l
st
2021 1532 m
2041 1532 l
st
gr
gr
1 -1 sc
/MC1_Arial 91 self 2051 -1563 m
( y=x+arcsin\()[25 43 53 45 53 51 30 46 46 20 51 30 ] xs
1 -1 sc
1 -1 sc
/MC3_Symbol 91 self 2544 -1563 m
/s61508 56 xgls
1 -1 sc
1 -1 sc
/MC1_Arial 91 self 2600 -1563 m
(h\))[51 30 ] xs
1 -1 sc
gs
gr
gs
gs
1849 1654 m
1869 1654 l
5 sw
1 0 0 rgb
st
1892 1654 m
1912 1654 l
st
1935 1654 m
1955 1654 l
st
1978 1654 m
1998 1654 l
st
2021 1654 m
2041 1654 l
st
gr
gr
1 -1 sc
2051 -1685 m
( y=sine\(x\)+)[25 43 53 46 20 51 51 30 45 30 53 ] xs
1 -1 sc
1 -1 sc
/MC3_Symbol 91 self 2498 -1685 m
/s61508 56 xgls
1 -1 sc
1 -1 sc
/MC1_Arial 91 self 2554 -1685 m
(h)[51 ] xs
1 -1 sc
gs
gr
gs
gs
1849 1765 m
2051 1765 l
5 sw
0 1 0 rgb
st
gr
gr
1 -1 sc
2051 -1796 m
( y=x)[25 43 53 45 ] xs
1 -1 sc
gs
gr
gs
gs
1849 1876 m
2051 1876 l
5 sw
1 0 0 rgb
st
gr
gr
1 -1 sc
2051 -1907 m
( y=sine\(x\))[25 43 53 46 20 51 51 30 45 30 ] xs
1 -1 sc
gr
gr
Save0 restore end
showpage
%%EOF
